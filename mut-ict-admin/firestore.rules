rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Function to check if user is an admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/adminUsers/$(request.auth.uid));
    }
    
    // Rules for adminUsers collection
    match /adminUsers/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
      allow update, delete: if request.auth.uid == userId;
    }
    
    // Rules for staff collection
    match /staff/{staffId} {
      allow read: if true;
      allow create, update, delete: if true;
    }
    
    // Rules for departments collection
    match /departments/{departmentId} {
      allow read: if true;
      allow create, update, delete: if true;
    }

    // Rules for timetables collection
    match /timetables/{timetableId} {
      allow read, create, update, delete: if true;
    }

    // Rules for events collection
    match /events/{eventId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null;
    }

    // Rules for registrations collection
    match /registrations/{registrationId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null;
    }
  }
}
